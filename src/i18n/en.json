{
  "header": {
    "builtby": "built with ðŸ•º by"
  },
  "form": {
    "gridcolumns": "Grid Columns",
    "mingridcolumns": "range",

    "gridrows": "Grid Rows",
    "gridrowsUnits": "(<= grid columns)",
    "mingridrows": "range",

    "featuresize": "Feature Size",
    "featuresizeUnits": "(in cols)",
    "featuresizeExtra": "(between 25% and 75% of cols)",
    "featureposition": "Feature Position",
    "minfeatureposition": "range",
    "fragmentation": "Fragmentation",
    "fragmentationExtra": "Controls the way the rest of the columns (excluding the feature) are fragmented; the fragmentation pattern is given by the bit representation of the fragmentation value.",
    "minfragmentation": "range",

    "metadetailsrange": "Meta-details Range",
    "metadetailsrangeUnits": "(7 = all metadetails; 0 = no metadetails)",
    "metadetailsleft": "Meta-details from ",
    "metadetailscenter": "on the left, to ",
    "metadetailsright": "on the right.",

    "imageweightrange": "Image Weight Range",
    "imageweightrangeUnits": "(10 = full; 0 = text only)",
    "imageweightleft": "Image weight from",
    "imageweightcenter": "on the left, to",
    "imageweightright": "on the right.",

    "subfeature": "Sub Feature",
    "subfeatureExtra": "Have an extra post in the feature column, with secondary emphasis.",
    "boostfeature": "Boost Feature Emphasis",
    "boostfeatureExtra": "Give the feature the maximum allowed meta-details and image weight.",
    "balancemdandiw": "Balance MD and IW",
    "balancemdandiwExtra": "For a given post, \"consume\" less meta-details on high image weight and vice-versa.",
    "hierarchycrossing": "Hierarchy Crossing",
    "hierarchycrossingUnits": "(between 0 = no crossing and 10)",
    "hierarchycrossingExtra": "Introduces cross columns posts. The bigger the value, the more crossing occurs. The value is \"consumed\" LTR, wider/bigger columns consuming more.",
    "flipcolsrows": "Flip Cols and Rows",
    "flipcolsrowsExtra": "Treat rows as columns, and columns as rows when calculating the layout.",

    "gridcolumngap": "Grid Column Gap",
    "gridrowgap": "Grid Row Gap",
    "codebutton": "Please may I have some code",
    "currentstateurl": "Current state URL",
    "currentstateurlExtra": "(use it to share or save this state)",
    "copyurl": "Copy URL",
    "project": "What does this project do?",
    "reset": "Reset",
    "units": "(in px)"
  },
  "modal": {
    "header": {
      "yourcode": "Your Grid Code",
      "what": "What is this?"
    },
    "copy": {
      "title": "Copy the code below:",
      "clipboard": "Copy to clipboard!",
      "clipboardSuccess": "Code copied!",
      "html": "Show HTML",
      "css": "Show CSS"
    },
    "button": "Done"
  },
  "grid": {
    "realcssunit": "Must use real CSS units, goofball"
  },
  "explain": {
    "paragraph1": "You can set the numbers, and units of your columns and rows, and I'll generate a CSS grid for you! <strong>Drag within the boxes</strong> to create divs placed within the grid.",
    "paragraph2": "Though this project can get a basic layout started for you, this project is not a comprehensive tour of CSS Grid capabilities. It is a way for you to use CSS Grid features quickly.",
    "paragraph3": "I noticed a lot of people weren't using Grid because they felt it was too complicated and they couldn't understand it. Grid is capable of so much, and this small generator only touches on a fraction of the features. The purpose of this is so people get up and running quickly, and create more interesting layouts.",
    "paragraph4": "Once you work with this a bit, I suggest checking out resources by",
    "cssguide": "CSS Grid Guide on CSS-Tricks",
    "paragraph5": "to dive deeper. There is also a",
    "paragraph6": "and a fun little game called",
    "paragraph7": "to help you learn more!",
    "contributions": "This project is open to contributions!",
    "fork": "Fork it here.",
    "note": "Please note: Screen readers will read the divs in the order you add the divs in, please keep this in mind while you're building a grid"
  },
  "utils": {
    "and": "and"
  }
}
